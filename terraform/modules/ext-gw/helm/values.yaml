productVersion: 2.6.0
image:
  tag: v1.3.9
  pullPolicy: IfNotPresent
  repositoryPath: mojaloop
persistentVolume:
  pvEnabled: false
  pvcEnabled: true
  accessMode: ReadWriteMany
  storageClass: efs
  mountToSubPath: repository/deployment/server/synapse-configs
readinessProbe:
  enabled: true
  initialDelaySeconds: 150
livenessProbe:
  enabled: true
  initialDelaySeconds: 180
ingress:
  apiServer:
    internal: 
      enabled: true
      annotations:
        kubernetes.io/ingress.class: nginx
        nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
        nginx.ingress.kubernetes.io/ssl-passthrough: "${nginx_ssl_passthrough}"
        cert-manager.io/cluster-issuer: ${api_int_issuer_name}
        #nginx.ingress.kubernetes.io/auth-tls-verify-client: "on"
        #nginx.ingress.kubernetes.io/auth-tls-secret: namespace/secretName
        
      hosts:
        - host: ${api_int_host}
          paths:
            - path: "/"
              servicePort: wso2
      tls:
        - secretName: extgw-int-tls
          hosts:
            - ${api_int_host}
    external: 
      enabled: true
      annotations:
        kubernetes.io/ingress.class: nginx-ext
        nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
        nginx.ingress.kubernetes.io/ssl-passthrough: "${nginx_ssl_passthrough}"
        cert-manager.io/cluster-issuer: ${api_ext_issuer_name}
        #nginx.ingress.kubernetes.io/auth-tls-verify-client: "on"
        #nginx.ingress.kubernetes.io/auth-tls-secret: namespace/secretName
        
      hosts:
        - host: ${api_ext_host}
          paths:
            - path: "/"
              servicePort: wso2
      tls:
        - secretName: extgw-ext-tls
          hosts:
            - ${api_ext_host}
  tokenServer:
    external:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: nginx-ext
        nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
        nginx.ingress.kubernetes.io/ssl-passthrough: "${nginx_ssl_passthrough}"
        cert-manager.io/cluster-issuer: ${token_ext_issuer_name}
        nginx.ingress.kubernetes.io/auth-tls-verify-client: "on"
        nginx.ingress.kubernetes.io/auth-tls-secret: wso2/tokenextgw-tls-ext
        
      hosts:
        - host: ${token_ext_host}
          paths:
            - path: "/"
              servicePort: wso2https
      tls:
        - secretName: tokenextgw-tls-ext
          hosts:
            - ${token_ext_host}
    internal:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: nginx
        nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
        nginx.ingress.kubernetes.io/ssl-passthrough: "${nginx_ssl_passthrough}"
        cert-manager.io/cluster-issuer: ${token_int_issuer_name}
        
      hosts:
        - host: ${token_int_host}
          paths:
            - path: "/"
              servicePort: wso2https
      tls:
        - secretName: tokenextgw-tls-int
          hosts:
            - ${token_int_host}
service:
  type: ClusterIP
  ports:
    wso2:
      name: wso2
      externalPort: 9443
      internalPort: 32443
      targetPort: 9443
    wso2https:
      name: wso2https
      externalPort: 8243
      internalPort: 32243
      targetPort: 8243
  sessionAffinity:
    enabled: true
    affinityType: ClientIP
secret:
  externalSecretVolMountEnabled: true
  wso2amSecretVolPath: /home/wso2carbon/wso2-secret-volume
  externalSecretName: wso2am-secret
configmap:
  externalConfigMapVolMountEnabled: true
  wso2amConfigVolPath: /home/wso2carbon/wso2-config-volume
  externalConfigMapName: wso2am-confmap
binconfigmap:
  externalConfigMapVolMountEnabled: true
  externalConfigMapName: wso2am-binmap
annotations: {}
